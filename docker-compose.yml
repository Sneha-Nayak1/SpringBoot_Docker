version: '3.8'
services:
 
 
  order:
    build:
     context: ./OrderDemo1
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-a:3306/order_db?useSSL=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME : root
      SPRING_DATASOURCE_PASSWORD : password
      SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS : kafka:9092
    depends_on:
      - mysql-a
    networks:
      - my-network
    ports:
      - "8083:8081"
 
  product:
    build:
     context: ./ProductDemo1
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-b:3306/product_db?useSSL=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME : root
      SPRING_DATASOURCE_PASSWORD : password
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS : kafka:9092
      SPRING_KAFKA_CONSUMER_GROUP_ID : group-1
    depends_on:
      - mysql-b
    networks:
      - my-network
    ports:
      - "8084:8082"
  
  mysql-a:
    image: mysql:8
    environment:
      MYSQL_DATABASE: order_db
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "3307:3306"
    networks:
      - my-network
    volumes:
      - db_order_a:/var/lib/mysql
      
  mysql-b:
    image: mysql:8
    environment:
      MYSQL_DATABASE: product_db
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "3308:3306"
    networks:
      - my-network
    volumes:
      - db_product_b:/var/lib/mysql
 
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
 
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - my-network
 
networks:
  my-network:
    driver: bridge
 
volumes:
  db_order_a:
  db_product_b: